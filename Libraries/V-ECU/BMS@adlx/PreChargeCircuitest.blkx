<?xml version="1.0" encoding="utf-8"?>

<FrameworkBuilder.SequenceFrame name="PreChargeCircuitest" library-link="Test Builder.TestCase" state="derived-meta-template" author="YoussefB" creation-date="2023-02-07T10:39:34" modification-date="2023-03-07T12:18:12" color="#4BACC6" id="{9457596C-7DE4-46D3-B5D3-904728758579}" schema-version="2.2.2">
	<library-description>
		TestCase will Reset the PreCharge Circuit, The TestCase has two modes :
		
		AutoTimeout :
			TauFaktor for the following formula needs to be chosen according to TargetVoltagePercentage of DCLink to be reached (PreChargeResistance * Capacitance * Taufaktor)
			The TestCase will check wither the DCLink Target Voltage has been reached before the Automatically generated timeout has been reached
			The user has to further configure "RelayTestTolerance" : This parameter defines "How long will should it take after Targetvoltage has been reached for UpperMain relay to close and Precharge relay to open"
		
		Manual Timeout : The user has to Configure and define "VoltageLevelTimeout" for DCLink to reach "TargetVoltagePercentage" , "RelayTestTolerance" has to also be defined similar to AutoMode
	</library-description>
	<parameters>
		<MainLibrary.Dictionary name="Attributes" data-direction="in" author="dSPACE GmbH" creation-date="2012-08-01T01:00:00" modification-date="2023-02-07T13:23:37" synect-ignore="true" id="{5EF60968-2009-4AFE-A6C9-32C59DE49BEB}">
			<value type="expr">{}</value>
		</MainLibrary.Dictionary>
	</parameters>
	<data-objects>
		<MainLibrary.Bool name="AutoTimeout" data-direction="in" author="YoussefB" creation-date="2023-02-08T09:36:41" modification-date="2023-02-23T11:14:54">
			<description>True -&gt; PreCharge Timeout is set Automatically, False -&gt; Precharge Timeout has to be set manually via VoltageLevelTimeout</description>
			<value>true</value>
		</MainLibrary.Bool>
		<MainLibrary.DataContainer name="AutoTimeoutParameter" data-direction="in" author="YoussefB" creation-date="2023-02-08T09:39:08" modification-date="2023-02-23T11:15:16">
			<description>Adjust TauFaktor depending on the TargetVoltage Percentage</description>
			<data-objects>
				<MainLibrary.Float name="TauFaktor" data-direction="in" author="YoussefB" creation-date="2023-02-08T09:39:26" modification-date="2023-02-08T11:15:29">
					<value>5</value>
				</MainLibrary.Float>
			</data-objects>
		</MainLibrary.DataContainer>
		<MainLibrary.List name="ExtraMeasurmentVars" data-direction="in" author="YoussefB" creation-date="2023-01-13T13:38:20" modification-date="2023-02-23T11:15:22" id="{77768DA5-7D06-4A78-8823-0CF1A898F336}">
			<description>Drag and Drop Signals from Mapping to this list to be added to the capture</description>
			<value type="expr">[]</value>
		</MainLibrary.List>
		<MainLibrary.Float name="Capacitance" data-direction="in" author="YoussefB" creation-date="2023-02-07T10:51:11" modification-date="2023-02-23T11:15:41">
			<description>Configure the DCLink Capacitance</description>
			<value>0.001</value>
		</MainLibrary.Float>
		<MainLibrary.Float name="PreChargeResistance" data-direction="in" author="YoussefB" creation-date="2023-02-07T10:51:11" modification-date="2023-02-23T11:16:09">
			<description>Configure PreChargeResistance</description>
			<value>50</value>
		</MainLibrary.Float>
		<MainLibrary.Float name="WireResistance" data-direction="in" author="YoussefB" creation-date="2023-02-07T10:51:55" modification-date="2023-02-23T11:16:15">
			<description>Configure Wire Resistance</description>
			<value>0.025</value>
		</MainLibrary.Float>
		<MainLibrary.Float name="VoltageLevelTimeout" data-direction="in" author="YoussefB" creation-date="2023-02-07T10:39:44" modification-date="2023-02-23T11:16:57">
			<description>"Manual Mode" : Configre Timeout for DCLink to reach (TargetVoltagePercentage) * Battery Voltage</description>
			<value>1</value>
		</MainLibrary.Float>
		<MainLibrary.Float name="TargetVoltagePercentage" data-direction="in" author="YoussefB" creation-date="2023-02-07T10:39:44" modification-date="2023-02-23T11:17:25">
			<description>DCLink TargetVoltage Percentage from Battery Voltage to be reached within timeout </description>
			<value>0.99</value>
		</MainLibrary.Float>
		<MainLibrary.Float name="RelayTestTolerance" data-direction="in" author="YoussefB" creation-date="2023-02-08T09:18:02" modification-date="2023-02-23T11:17:56">
			<description>Tolernace time for Relays to be in correct position after the Target Voltage have been reached</description>
			<value>0.5</value>
		</MainLibrary.Float>
	</data-objects>
	<subsystems>
		<FrameworkBuilder.ActualDataSlot name="Data" author="YoussefB" creation-date="2023-02-07T10:39:34" modification-date="2023-02-28T09:19:32">
			<library-description>
				To define meta templates.
				This block must be used inside a Frame to define dataobject slots.
			</library-description>
			<data-objects>
				<XILAPI.Capture name="Capture" author="YoussefB" creation-date="2023-02-07T10:41:30" modification-date="2023-02-07T10:52:17"></XILAPI.Capture>
				<XILAPI.CaptureResult name="CaptureResult" author="YoussefB" creation-date="2023-02-07T10:41:32" modification-date="2023-02-07T10:52:17" id="{9BECA0FE-D61B-4ECD-8D60-F584616D9970}">
					<value></value>
				</XILAPI.CaptureResult>
				<MainLibrary.List name="MainMeasurmentVars" author="YoussefB" creation-date="2023-01-13T13:38:20" modification-date="2023-02-07T13:25:33" id="{321714A1-6BD6-4E61-9521-672E25E9F7BF}">
					<value type="expr">
						['GetDCLinkVoltage',
						 'GetBatteryVoltageHV',
						 'ResetPreChargeCircut',
						 'GetUpperMainRelay_Status',
						 'GetPreChargeRelay_Status',
						 'GetLowerMainRelay_Status']
					</value>
				</MainLibrary.List>
				<MainLibrary.Float name="Timeout" author="YoussefB" creation-date="2023-02-08T09:27:27" modification-date="2023-02-08T09:27:31">
					<value>0.0</value>
				</MainLibrary.Float>
				<MainLibrary.Float name="OriginalCapacitance" author="YoussefB" creation-date="2023-02-28T09:19:32" modification-date="2023-02-28T09:19:39">
					<value>0.0</value>
				</MainLibrary.Float>
			</data-objects>
			<subsystems>
				<FrameworkBuilder.ActualOperationSlot name="Initialization" author="YoussefB" creation-date="2023-02-07T10:39:34" modification-date="2023-02-28T09:19:49">
					<library-description>
						To define meta templates.
						This block must be used inside a Frame to define a slot for blocks.
					</library-description>
					<subsystems>
						<MainLibrary.Exec name="MeasurmentVars" author="YoussefB" creation-date="2023-01-13T13:42:48" modification-date="2023-02-07T13:41:25">
							<library-description>To execute valid Python code.</library-description>
							<command>_AD_.MainMeasurmentVars.extend([x for x in _AD_.ExtraMeasurmentVars if x not in _AD_.MainMeasurmentVars])</command>
						</MainLibrary.Exec>
						<Standard.LibraryLinkBlock name="InitMAPort" library-link="XIL API Convenience.InitMAPort" author="YoussefB" creation-date="2023-02-07T10:40:12" modification-date="2023-02-07T10:52:17">
							<library-description>
								To initialize the MAPort object.
								HELP: automationdesk:///AutomationDeskDocumentation?Show=Help#12501005
							</library-description>
							<parameters>
								<XILAPI.MAPortConfiguration name="MAPortConfiguration" reference="MAPortConfiguration" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T10:52:17" id="{09E4C568-FCB1-49EA-BB62-2A072E01B92B}">
									<value type="expr">
										{'ApplicationPath':'',
										 'PlatformIdentifier':''}
									</value>
								</XILAPI.MAPortConfiguration>
								<MainLibrary.String name="Vendor" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T10:52:17">
									<custom-edit>xilapi.OpenVendorDialog()</custom-edit>
									<value>dSPACE</value>
								</MainLibrary.String>
								<XILAPI.MAPort name="MAPort" reference="MAPort" data-direction="out" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T10:52:17"></XILAPI.MAPort>
							</parameters>
						</Standard.LibraryLinkBlock>
						<Standard.LibraryLinkBlock name="GetCapacitorCapacitance" library-link="BMS.GetCapacitorCapacitance" author="YoussefB" creation-date="2023-02-28T09:19:49" modification-date="2023-02-28T09:19:49">
							<library-description>Get DCLink Capacitance</library-description>
							<parameters>
								<MainLibrary.Float name="Capacitance" reference="OriginalCapacitance" data-direction="out" author="YoussefB" creation-date="2023-01-13T14:14:08" modification-date="2023-02-28T09:19:54">
									<value>0.0</value>
								</MainLibrary.Float>
							</parameters>
						</Standard.LibraryLinkBlock>
						<MainLibrary.Exec name="AdaptStop" author="YoussefB" creation-date="2023-02-08T09:18:27" modification-date="2023-05-12T10:09:48">
							<library-description>To execute valid Python code.</library-description>
							<command>
								if _AD_.AutoTimeout == False : 
								    _AD_.Timeout = _AD_.VoltageLevelTimeout + _AD_.RelayTestTolerance
								    print("Timeout = {0}".format(_AD_.Timeout))
								else : 
								    _AD_.VoltageLevelTimeout = (_AD_.PreChargeResistance * _AD_.Capacitance * _AD_.AutoTimeoutParameter.TauFaktor) 
								    _AD_.Timeout = _AD_.VoltageLevelTimeout + _AD_.RelayTestTolerance
							</command>
						</MainLibrary.Exec>
					</subsystems>
				</FrameworkBuilder.ActualOperationSlot>
				<FrameworkBuilder.ActualOperationSlot name="ActionsAndEvaluation" author="YoussefB" creation-date="2023-02-07T10:39:34" modification-date="2023-02-07T13:42:00">
					<library-description>
						To define meta templates.
						This block must be used inside a Frame to define a slot for blocks.
					</library-description>
					<subsystems>
						<MainLibrary.Serial name="Actions" author="YoussefB" creation-date="2023-02-07T11:17:41" modification-date="2023-05-23T12:32:00">
							<library-description>To execute subsystems sequentially.</library-description>
							<subsystems>
								<Standard.LibraryLinkBlock name="SetPreChargeR" library-link="BMS.SetPreChargeR" author="YoussefB" creation-date="2023-02-07T13:23:01" modification-date="2023-02-07T13:23:01">
									<library-description>Set PreChargeRelay Branch Resistance Value</library-description>
									<parameters>
										<MainLibrary.Float name="PreChargeWireResistance" reference="PreChargeResistance" data-direction="in" author="YoussefB" creation-date="2023-01-13T14:09:45" modification-date="2023-02-07T13:23:13">
											<value>0.0</value>
										</MainLibrary.Float>
									</parameters>
								</Standard.LibraryLinkBlock>
								<Standard.LibraryLinkBlock name="SetWireR" library-link="BMS.SetWireR" author="YoussefB" creation-date="2023-02-07T13:23:10" modification-date="2023-02-07T13:23:10">
									<library-description>Set PreChargeCircuit Wire Resistance</library-description>
									<parameters>
										<MainLibrary.Float name="MainWireResistance" reference="WireResistance" data-direction="in" author="YoussefB" creation-date="2023-01-13T14:09:45" modification-date="2023-02-07T13:23:16">
											<value>0.0</value>
										</MainLibrary.Float>
									</parameters>
								</Standard.LibraryLinkBlock>
								<Standard.LibraryLinkBlock name="SetCapacitorCapacitance" library-link="BMS.SetCapacitorCapacitance" author="YoussefB" creation-date="2023-02-07T13:23:31" modification-date="2023-02-07T13:23:31">
									<library-description>Set DCLink capacitance</library-description>
									<parameters>
										<MainLibrary.Float name="Capacitance" reference="Capacitance" data-direction="in" author="YoussefB" creation-date="2023-01-13T14:14:08" modification-date="2023-02-07T13:23:33">
											<value>0.0</value>
										</MainLibrary.Float>
									</parameters>
								</Standard.LibraryLinkBlock>
								<Standard.LibraryLinkBlock name="InitializeCapture" library-link="XIL API Convenience.InitializeCapture" author="YoussefB" creation-date="2023-02-07T10:41:27" modification-date="2023-02-07T10:52:17">
									<library-description>
										To create and initialize a XIL API capture.
										HELP: automationdesk:///AutomationDeskDocumentation?Show=Help#12502001
									</library-description>
									<parameters>
										<XILAPI.MAPort name="MAPort" reference="MAPort" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T10:52:17"></XILAPI.MAPort>
										<MainLibrary.String name="TaskName" reference="TaskName" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T10:52:17">
											<custom-edit>
												xilapi.OpenTaskNameDialog(MAPortAvailable=False)
												
											</custom-edit>
											<value></value>
										</MainLibrary.String>
										<MainLibrary.Variant name="VariablePool" reference="Mapping" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T10:52:17" id="{39C16726-9495-4183-836A-886DFD87E4A5}">
											<value type="expr">None</value>
										</MainLibrary.Variant>
										<MainLibrary.List name="Variables" reference="MainMeasurmentVars" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-05-11T15:32:06" id="{1F95E17E-0409-4D94-AA9A-204C89FE4EFE}">
											<custom-edit>
												xilapi.OpenVariableListDialog(MAPortAvailable=True)
												
											</custom-edit>
											<value type="expr">
												['GetDCLinkVoltage',
												 'GetBatteryVoltageHV',
												 'ResetPreChargeCircut',
												 'GetUpperMainRelay_Status',
												 'GetPreChargeRelay_Status',
												 'GetLowerMainRelay_Status']
											</value>
										</MainLibrary.List>
										<MainLibrary.Int name="Downsampling" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T10:52:17">
											<value>1</value>
										</MainLibrary.Int>
										<MainLibrary.Float name="DefaultDuration" reference="VoltageLevelTimeout" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-08T09:24:43">
											<value>10.0</value>
										</MainLibrary.Float>
										<XILAPI.Capture name="Capture" reference="Capture" data-direction="out" result-level="medium" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T10:52:17"></XILAPI.Capture>
									</parameters>
								</Standard.LibraryLinkBlock>
								<Standard.LibraryLinkBlock name="ConfigureStartCondition" library-link="XIL API Convenience.ConfigureStartCondition" author="YoussefB" creation-date="2023-02-07T11:27:23" modification-date="2023-02-07T11:27:23">
									<library-description>
										To specify a start condition of a capture.
										
										HELP: automationdesk:///AutomationDeskDocumentation?Show=Help#12502002
									</library-description>
									<parameters>
										<XILAPI.Capture name="Capture" reference="Capture" data-direction="in" result-level="medium" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T11:27:36"></XILAPI.Capture>
										<MainLibrary.Variant name="Defines" reference="Mapping" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T11:27:39" id="{33910386-FFBC-4A94-AD12-EFBC8998FA5D}">
											<value type="expr">None</value>
										</MainLibrary.Variant>
										<MainLibrary.String name="Condition" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-03-06T13:26:57">
											<custom-edit>
												Value, PressedButton = dialogslibrary.EnterGESExpression(
												                        Expression = _AD_._VALUE_,
												                        Identifier = xilapi.GetConditionDefines(_AD_.Defines),
												                        Title = 'Value Editor - Condition' )
												
												if PressedButton == dialogslibrary.BUTTON_OK:
												    _AD_._VALUE_ = Value
											</custom-edit>
											<value>posedge(ResetPreChargeCircut,0.5)</value>
										</MainLibrary.String>
										<MainLibrary.Float name="Delay" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-05-23T12:31:49">
											<value>-1</value>
										</MainLibrary.Float>
										<MainLibrary.Float name="TimeOut" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T11:27:58">
											<value>5</value>
										</MainLibrary.Float>
									</parameters>
								</Standard.LibraryLinkBlock>
								<Standard.LibraryLinkBlock name="ConfigureStopCondition" library-link="XIL API Convenience.ConfigureStopCondition" author="YoussefB" creation-date="2023-02-07T11:17:07" modification-date="2023-02-07T11:17:07">
									<library-description>
										To specify a stop condition of a capture.
										
										HELP: automationdesk:///AutomationDeskDocumentation?Show=Help#12502003
									</library-description>
									<parameters>
										<XILAPI.Capture name="Capture" reference="Capture" data-direction="in" result-level="medium" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T11:17:09"></XILAPI.Capture>
										<MainLibrary.Variant name="Defines" reference="Mapping" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T11:17:18" id="{23067990-5134-4E05-9955-C1A577344F49}">
											<value type="expr">None</value>
										</MainLibrary.Variant>
										<MainLibrary.String name="Condition" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T13:52:25">
											<custom-edit>
												Value, PressedButton = dialogslibrary.EnterGESExpression(
												                        Expression = _AD_._VALUE_,
												                        Identifier = xilapi.GetConditionDefines(_AD_.Defines),
												                        Title = 'Value Editor - Condition' )
												
												if PressedButton == dialogslibrary.BUTTON_OK:
												    _AD_._VALUE_ = Value
											</custom-edit>
											<value>negedge(GetPreChargeRelay_Status,0.5)</value>
										</MainLibrary.String>
										<MainLibrary.Float name="Delay" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-05-23T12:31:06">
											<value>2</value>
										</MainLibrary.Float>
										<MainLibrary.Float name="TimeOut" reference="Timeout" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-08T09:28:12">
											<value>1</value>
										</MainLibrary.Float>
									</parameters>
								</Standard.LibraryLinkBlock>
								<Standard.LibraryLinkBlock name="StartCapture" library-link="XIL API Convenience.StartCapture" author="YoussefB" creation-date="2023-02-07T11:16:53" modification-date="2023-02-07T11:16:53">
									<library-description>
										Starts the data logging.
										
										HELP: automationdesk:///AutomationDeskDocumentation?Show=Help#12502010
									</library-description>
									<parameters>
										<XILAPI.Capture name="Capture" reference="Capture" data-direction="in" result-level="medium" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T11:16:56"></XILAPI.Capture>
										<XILAPI.CaptureResultWriter name="CaptureResultWriter" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T11:16:53"></XILAPI.CaptureResultWriter>
									</parameters>
								</Standard.LibraryLinkBlock>
								<MainLibrary.Sleep name="Sleep" author="SimonB" creation-date="2023-05-23T12:32:00" modification-date="2023-05-23T12:32:00">
									<library-description>To delay downstream operations for a certain time.</library-description>
									<Time name="Time" modification-date="2023-05-23T12:32:06">
										<value>0.7</value>
									</Time>
								</MainLibrary.Sleep>
								<Standard.LibraryLinkBlock name="ResetPreChargeCircuit" library-link="BMS.ResetPreChargeCircuit" author="YoussefB" creation-date="2023-02-07T11:24:00" modification-date="2023-05-23T12:30:20">
									<library-description>Reset the PreCharge Phase/Circuit</library-description>
								</Standard.LibraryLinkBlock>
								<Standard.LibraryLinkBlock name="GetCaptureResult" library-link="XIL API Convenience.GetCaptureResult" author="YoussefB" creation-date="2023-02-07T11:28:20" modification-date="2023-02-07T11:28:20">
									<library-description>
										To get data from the capture and set the capture state.
										
										HELP: automationdesk:///AutomationDeskDocumentation?Show=Help#12502006
									</library-description>
									<parameters>
										<XILAPI.Capture name="Capture" reference="Capture" data-direction="in" result-level="medium" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T11:28:25"></XILAPI.Capture>
										<MainLibrary.Int name="StopCapturing" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T11:28:20">
											<value>1</value>
										</MainLibrary.Int>
										<MainLibrary.Int name="WhenFinished" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T11:28:27">
											<value>1</value>
										</MainLibrary.Int>
										<MainLibrary.Dictionary name="CaptureResultMetaData" data-direction="out" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T11:28:20" id="{7DB26B65-B699-4B7F-8125-D1AB52503DA8}">
											<value type="expr">{}</value>
										</MainLibrary.Dictionary>
										<XILAPI.CaptureResult name="CaptureResult" reference="CaptureResult" data-direction="out" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T11:28:29" id="{BE5BC29C-9FCC-40B2-B15D-A2CFDDE8362D}">
											<value></value>
										</XILAPI.CaptureResult>
										<XILAPI.CaptureResult name="OfflineCaptureResult" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T11:28:20" id="{99B650EA-9428-4AAA-9C28-8686190613F0}">
											<value></value>
										</XILAPI.CaptureResult>
										<MainLibrary.Dictionary name="OfflineCaptureResultMetaData" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T11:28:20" id="{396BF61C-63C1-4BA1-8C12-6475C5942FC3}">
											<value type="expr">
												{'StartTriggerTimeOut':'FALSE',
												 'StopTriggerTimeOut':'FALSE'}
											</value>
										</MainLibrary.Dictionary>
									</parameters>
								</Standard.LibraryLinkBlock>
							</subsystems>
						</MainLibrary.Serial>
						<MainLibrary.Serial name="Eval" author="YoussefB" creation-date="2023-02-07T11:28:33" modification-date="2023-05-11T13:04:28">
							<library-description>To execute subsystems sequentially.</library-description>
							<data-objects>
								<Evaluation.Signal name="BatteryVoltage" author="YoussefB" creation-date="2023-02-07T11:29:02" modification-date="2023-02-07T11:29:31" id="{52C8D05A-221E-4F06-A546-D2B1553CDDD6}">
									<library-description>A signal data object consisting of (x,y) value pairs.</library-description>
									<value>[], []</value>
								</Evaluation.Signal>
								<Evaluation.Signal name="DCLinkVoltage" author="YoussefB" creation-date="2023-02-07T11:29:03" modification-date="2023-02-07T11:29:35" id="{011618A0-FFF2-4128-BC1A-A2A16F27F9C6}">
									<library-description>A signal data object consisting of (x,y) value pairs.</library-description>
									<value>[], []</value>
								</Evaluation.Signal>
								<Evaluation.Signal name="PreChargeRelay" author="YoussefB" creation-date="2023-02-07T11:29:04" modification-date="2023-02-07T14:24:38" id="{73F8B184-01D3-44F7-BB5F-2CF59BD55A2F}">
									<library-description>A signal data object consisting of (x,y) value pairs.</library-description>
									<value>[], []</value>
								</Evaluation.Signal>
								<Evaluation.Signal name="UpperMainRelay" author="YoussefB" creation-date="2023-02-07T11:29:05" modification-date="2023-02-07T14:24:38" id="{C8E42022-68DF-43ED-8CCD-576433761264}">
									<library-description>A signal data object consisting of (x,y) value pairs.</library-description>
									<value>[], []</value>
								</Evaluation.Signal>
								<Evaluation.Signal name="LowerMainRelay" author="YoussefB" creation-date="2023-02-07T11:29:10" modification-date="2023-02-07T14:24:38" id="{5B51C2B0-5F3C-4886-BB04-57866D651572}">
									<library-description>A signal data object consisting of (x,y) value pairs.</library-description>
									<value>[], []</value>
								</Evaluation.Signal>
							</data-objects>
							<subsystems>
								<Standard.LibraryLinkBlock name="GetBatteryVoltage" library-link="BMS.GetSignalFromXILApiCaptureResult" author="SimonB" creation-date="2023-05-11T13:04:15" modification-date="2023-05-11T13:04:33">
									<library-description>To execute subsystems sequentially.</library-description>
									<parameters>
										<XILAPI.CaptureResult name="CaptureResult" reference="CaptureResult" data-direction="in" author="SimonB" creation-date="2023-05-11T11:59:37" modification-date="2023-05-11T13:04:18" id="{5646A576-929C-4308-BD61-16CF033B1975}">
											<value></value>
										</XILAPI.CaptureResult>
										<MainLibrary.String name="Task" reference="TaskName" data-direction="in" author="SimonB" creation-date="2023-05-11T11:59:39" modification-date="2023-05-11T13:04:22">
											<value></value>
										</MainLibrary.String>
										<MainLibrary.String name="VariableName" reference="Mapping.LabelMapping.GetBatteryVoltageHV.Identifier" data-direction="in" author="SimonB" creation-date="2023-05-11T11:59:43" modification-date="2023-05-11T13:04:37">
											<value></value>
										</MainLibrary.String>
										<Evaluation.Signal name="Signal" reference="BatteryVoltage" data-direction="out" author="SimonB" creation-date="2023-05-11T11:59:45" modification-date="2023-05-11T13:04:41" id="{2C82BBAB-141B-4653-A55D-496F8E0C9656}">
											<library-description>A signal data object consisting of (x,y) value pairs.</library-description>
											<value>[], []</value>
										</Evaluation.Signal>
									</parameters>
								</Standard.LibraryLinkBlock>
								<Evaluation.GetSignalFromXILAPICaptureResult name="GetBatteryVoltage_" author="YoussefB" creation-date="2023-02-07T11:28:59" modification-date="2023-05-11T13:04:41" enable="false">
									<library-description>To get a signal by converting data extracted from a XILAPI CaptureResult.</library-description>
									<CaptureResult name="CaptureResult" reference="CaptureResult" modification-date="2023-02-07T11:32:31">
										<value></value>
									</CaptureResult>
									<Task name="Task" reference="TaskName" modification-date="2023-02-07T11:32:34">
										<value></value>
									</Task>
									<VariableName name="VariableName" reference="Mapping.LabelMapping.GetBatteryVoltageHV.Identifier" modification-date="2023-02-07T11:32:43">
										<value></value>
									</VariableName>
									<Signal name="Signal" reference="BatteryVoltage" modification-date="2023-02-07T11:32:45">
										<value>[], []</value>
									</Signal>
								</Evaluation.GetSignalFromXILAPICaptureResult>
								<Standard.LibraryLinkBlock name="GetDCLinkVoltage" library-link="BMS.GetSignalFromXILApiCaptureResult" author="SimonB" creation-date="2023-05-11T13:04:15" modification-date="2023-05-11T13:04:46">
									<library-description>To execute subsystems sequentially.</library-description>
									<parameters>
										<XILAPI.CaptureResult name="CaptureResult" reference="CaptureResult" data-direction="in" author="SimonB" creation-date="2023-05-11T11:59:37" modification-date="2023-05-11T13:04:23" id="{0F1BAE2B-B9E1-4B05-B563-82D9FF1364D3}">
											<value></value>
										</XILAPI.CaptureResult>
										<MainLibrary.String name="Task" reference="TaskName" data-direction="in" author="SimonB" creation-date="2023-05-11T11:59:39" modification-date="2023-05-11T13:04:23">
											<value></value>
										</MainLibrary.String>
										<MainLibrary.String name="VariableName" reference="Mapping.LabelMapping.GetDCLinkVoltage.Identifier" data-direction="in" author="SimonB" creation-date="2023-05-11T11:59:43" modification-date="2023-05-11T13:04:51">
											<value></value>
										</MainLibrary.String>
										<Evaluation.Signal name="Signal" reference="DCLinkVoltage" data-direction="out" author="SimonB" creation-date="2023-05-11T11:59:45" modification-date="2023-05-11T13:04:54" id="{F94A6875-6171-4D27-AD36-E721C6446C97}">
											<library-description>A signal data object consisting of (x,y) value pairs.</library-description>
											<value>[], []</value>
										</Evaluation.Signal>
									</parameters>
								</Standard.LibraryLinkBlock>
								<Evaluation.GetSignalFromXILAPICaptureResult name="GetDCLinkVoltage_" author="YoussefB" creation-date="2023-02-07T11:31:55" modification-date="2023-05-11T13:04:48" enable="false">
									<library-description>To get a signal by converting data extracted from a XILAPI CaptureResult.</library-description>
									<CaptureResult name="CaptureResult" reference="CaptureResult" modification-date="2023-02-07T11:32:48">
										<value></value>
									</CaptureResult>
									<Task name="Task" reference="TaskName" modification-date="2023-02-07T11:32:51">
										<value></value>
									</Task>
									<VariableName name="VariableName" reference="Mapping.LabelMapping.GetDCLinkVoltage.Identifier" modification-date="2023-02-07T11:32:58">
										<value></value>
									</VariableName>
									<Signal name="Signal" reference="DCLinkVoltage" modification-date="2023-02-07T11:33:00">
										<value>[], []</value>
									</Signal>
								</Evaluation.GetSignalFromXILAPICaptureResult>
								<Standard.LibraryLinkBlock name="GetPreChargeRelay" library-link="BMS.GetSignalFromXILApiCaptureResult" author="SimonB" creation-date="2023-05-11T13:04:15" modification-date="2023-05-11T13:04:59">
									<library-description>To execute subsystems sequentially.</library-description>
									<parameters>
										<XILAPI.CaptureResult name="CaptureResult" reference="CaptureResult" data-direction="in" author="SimonB" creation-date="2023-05-11T11:59:37" modification-date="2023-05-11T13:04:24" id="{82FB4DBA-7FE8-4AAD-B9D9-73FE967F4199}">
											<value></value>
										</XILAPI.CaptureResult>
										<MainLibrary.String name="Task" reference="TaskName" data-direction="in" author="SimonB" creation-date="2023-05-11T11:59:39" modification-date="2023-05-11T13:04:24">
											<value></value>
										</MainLibrary.String>
										<MainLibrary.String name="VariableName" reference="Mapping.LabelMapping.GetPreChargeRelay_Status.Identifier" data-direction="in" author="SimonB" creation-date="2023-05-11T11:59:43" modification-date="2023-05-11T13:05:05">
											<value></value>
										</MainLibrary.String>
										<Evaluation.Signal name="Signal" reference="PreChargeRelay" data-direction="out" author="SimonB" creation-date="2023-05-11T11:59:45" modification-date="2023-05-11T13:05:09" id="{E2424DAE-0E7A-42A8-BAC2-015A910F6461}">
											<library-description>A signal data object consisting of (x,y) value pairs.</library-description>
											<value>[], []</value>
										</Evaluation.Signal>
									</parameters>
								</Standard.LibraryLinkBlock>
								<Evaluation.GetSignalFromXILAPICaptureResult name="GetPreChargeRelay_" author="YoussefB" creation-date="2023-02-07T11:32:02" modification-date="2023-05-11T13:05:00" enable="false">
									<library-description>To get a signal by converting data extracted from a XILAPI CaptureResult.</library-description>
									<CaptureResult name="CaptureResult" reference="CaptureResult" modification-date="2023-02-07T14:24:38">
										<value></value>
									</CaptureResult>
									<Task name="Task" reference="TaskName" modification-date="2023-02-07T14:24:38">
										<value></value>
									</Task>
									<VariableName name="VariableName" reference="Mapping.LabelMapping.GetPreChargeRelay_Status.Identifier" modification-date="2023-02-07T14:24:38">
										<value></value>
									</VariableName>
									<Signal name="Signal" reference="PreChargeRelay" modification-date="2023-02-07T14:24:38">
										<value>[], []</value>
									</Signal>
								</Evaluation.GetSignalFromXILAPICaptureResult>
								<Standard.LibraryLinkBlock name="GetUpperMainRelay" library-link="BMS.GetSignalFromXILApiCaptureResult" author="SimonB" creation-date="2023-05-11T13:04:15" modification-date="2023-05-11T13:05:19">
									<library-description>To execute subsystems sequentially.</library-description>
									<parameters>
										<XILAPI.CaptureResult name="CaptureResult" reference="CaptureResult" data-direction="in" author="SimonB" creation-date="2023-05-11T11:59:37" modification-date="2023-05-11T13:04:25" id="{F270056E-ACD5-4CEE-AEA2-A48291A71491}">
											<value></value>
										</XILAPI.CaptureResult>
										<MainLibrary.String name="Task" reference="TaskName" data-direction="in" author="SimonB" creation-date="2023-05-11T11:59:39" modification-date="2023-05-11T13:04:25">
											<value></value>
										</MainLibrary.String>
										<MainLibrary.String name="VariableName" reference="Mapping.LabelMapping.GetUpperMainRelay_Status.Identifier" data-direction="in" author="SimonB" creation-date="2023-05-11T11:59:43" modification-date="2023-05-11T13:05:24">
											<value></value>
										</MainLibrary.String>
										<Evaluation.Signal name="Signal" reference="UpperMainRelay" data-direction="out" author="SimonB" creation-date="2023-05-11T11:59:45" modification-date="2023-05-11T13:05:28" id="{04D6F0F3-4637-4ACC-8C37-021E63074F34}">
											<library-description>A signal data object consisting of (x,y) value pairs.</library-description>
											<value>[], []</value>
										</Evaluation.Signal>
									</parameters>
								</Standard.LibraryLinkBlock>
								<Evaluation.GetSignalFromXILAPICaptureResult name="GetUpperMainRelay_" author="YoussefB" creation-date="2023-02-07T11:32:02" modification-date="2023-05-11T13:05:17" enable="false">
									<library-description>To get a signal by converting data extracted from a XILAPI CaptureResult.</library-description>
									<CaptureResult name="CaptureResult" reference="CaptureResult" modification-date="2023-02-07T14:24:38">
										<value></value>
									</CaptureResult>
									<Task name="Task" reference="TaskName" modification-date="2023-02-07T14:24:38">
										<value></value>
									</Task>
									<VariableName name="VariableName" reference="Mapping.LabelMapping.GetUpperMainRelay_Status.Identifier" modification-date="2023-02-07T14:24:38">
										<value></value>
									</VariableName>
									<Signal name="Signal" reference="UpperMainRelay" modification-date="2023-02-07T14:24:38">
										<value>[], []</value>
									</Signal>
								</Evaluation.GetSignalFromXILAPICaptureResult>
								<Standard.LibraryLinkBlock name="GetLowerMainRelay" library-link="BMS.GetSignalFromXILApiCaptureResult" author="SimonB" creation-date="2023-05-11T13:04:15" modification-date="2023-05-11T13:05:35">
									<library-description>To execute subsystems sequentially.</library-description>
									<parameters>
										<XILAPI.CaptureResult name="CaptureResult" reference="CaptureResult" data-direction="in" author="SimonB" creation-date="2023-05-11T11:59:37" modification-date="2023-05-11T13:04:28" id="{99F20CD6-6298-4146-9156-B9DF60CB24C8}">
											<value></value>
										</XILAPI.CaptureResult>
										<MainLibrary.String name="Task" reference="TaskName" data-direction="in" author="SimonB" creation-date="2023-05-11T11:59:39" modification-date="2023-05-11T13:04:28">
											<value></value>
										</MainLibrary.String>
										<MainLibrary.String name="VariableName" reference="Mapping.LabelMapping.GetLowerMainRelay_Status.Identifier" data-direction="in" author="SimonB" creation-date="2023-05-11T11:59:43" modification-date="2023-05-11T13:05:44">
											<value></value>
										</MainLibrary.String>
										<Evaluation.Signal name="Signal" reference="LowerMainRelay" data-direction="out" author="SimonB" creation-date="2023-05-11T11:59:45" modification-date="2023-05-11T13:05:48" id="{2189147C-EEC2-440A-B778-DEBC5720D918}">
											<library-description>A signal data object consisting of (x,y) value pairs.</library-description>
											<value>[], []</value>
										</Evaluation.Signal>
									</parameters>
								</Standard.LibraryLinkBlock>
								<Evaluation.GetSignalFromXILAPICaptureResult name="GetLowerMainRelay_" author="YoussefB" creation-date="2023-02-07T11:32:02" modification-date="2023-05-11T13:05:38" enable="false">
									<library-description>To get a signal by converting data extracted from a XILAPI CaptureResult.</library-description>
									<CaptureResult name="CaptureResult" reference="CaptureResult" modification-date="2023-02-07T14:24:38">
										<value></value>
									</CaptureResult>
									<Task name="Task" reference="TaskName" modification-date="2023-02-07T14:24:38">
										<value></value>
									</Task>
									<VariableName name="VariableName" reference="Mapping.LabelMapping.GetLowerMainRelay_Status.Identifier" modification-date="2023-02-07T14:24:38">
										<value></value>
									</VariableName>
									<Signal name="Signal" reference="LowerMainRelay" modification-date="2023-02-07T14:24:38">
										<value>[], []</value>
									</Signal>
								</Evaluation.GetSignalFromXILAPICaptureResult>
								<MainLibrary.Exec name="Eval" author="YoussefB" creation-date="2023-02-07T11:34:07" modification-date="2023-03-06T13:21:25">
									<library-description>To execute valid Python code.</library-description>
									<command>
										
										#Eval DCLinkVoltage
										
										VoltageEvalList, VoltageEvalSignal = evaluationlibrary.GetConditionTrueTimes({"BatteryVoltage" : _AD_.BatteryVoltage, "DCLinkVoltage" : _AD_.DCLinkVoltage}, f'DCLinkVoltage &gt;= {_AD_.TargetVoltagePercentage} * BatteryVoltage')
										
										
										if len(VoltageEvalList) != 0 : 
										    
										    BatV = round(_AD_.BatteryVoltage[1][_AD_.BatteryVoltage[0].index(VoltageEvalList[0])],8)
										    DCLinkV = round(_AD_.DCLinkVoltage[1][_AD_.DCLinkVoltage[0].index(VoltageEvalList[0])],8)
										    
										    if VoltageEvalList[0] &lt;= _AD_.VoltageLevelTimeout: 
										        
										        mainlibrary.Decision("Passed", f'DCLink Target Voltage Reached')
										    
										        DataDict = {"BatteryVoltage" : BatV , "DCLinkVoltage" : DCLinkV ,"PrecentageReached": f'{(DCLinkV/BatV) * 100} %', "TimeElapsed" : round(VoltageEvalList[0],3), "Timeout" : round(_AD_.VoltageLevelTimeout,3) }
										        
										        CellColor = [["DCLinkVoltage" ,(0,100,0)]]
										        
										        reportlibrary.AddTable(["Variable", "Value"], Data = DataDict, CellColorRange = CellColor)
										    else : 
										        
										        mainlibrary.Decision("Failed", f'DCLink Target Voltage Reached After Timeout')
										    
										        DataDict = {"BatteryVoltage" : BatV , "DCLinkVoltage" : DCLinkV,"PrecentageReached": f'{(DCLinkV/BatV) * 100} %', "TimeElapsed" : round(VoltageEvalList[0],3), "Timeout" : round(_AD_.VoltageLevelTimeout,3) }
										        
										        CellColor = [["DCLinkVoltage" ,(100,0,0)]]
										        
										        reportlibrary.AddTable(["Variable", "Value"], Data = DataDict, CellColorRange = CellColor)
										    
										else :
										    mainlibrary.Decision("Failed", f'DCLink Target Voltage violated')
										    CellColor = [["DCLinkVoltage" ,(100,0,0)]]
										    if "nan" in _AD_.BatteryVoltage[1] or "nan" in _AD_.DCLinkVoltage[1]:
										        reportlibrary.AddTable(["Variable", "Value"], Data = {"BatteryVoltage" : round(_AD_.BatteryVoltage[1][-1],3), "DCLinkVoltage" : round(_AD_.DCLinkVoltage[1][-1],3), "PrecentageReached": f'{round((_AD_.DCLinkVoltage[1][-1] /_AD_.BatteryVoltage[1][-1]) * 100,3)} %',"Timeout" : round(_AD_.VoltageLevelTimeout,3) }, CellColorRange = CellColor)
										    else:
										        mainlibrary.Decision("Failed", f'PreCharge was Too fast, Error state')
										        reportlibrary.AddTable(["Variable", "Value"], Data = {"BatteryVoltage" : "NaN", "DCLinkVoltage" : "NaN","Timeout" : round(_AD_.VoltageLevelTimeout,3) }, CellColorRange = CellColor)
										    
										#RelayEval
										
										PreChargeRelayClosedList, PreChargeRelayClosedSignal = evaluationlibrary.GetConditionTrueTimes({"PreChargeRelay" : _AD_.PreChargeRelay}, "posedge(PreChargeRelay,0.5)")
										LowerMainRelayClosedList, LowerMainRelayClosedSignal = evaluationlibrary.GetConditionTrueTimes({"LowerMainRelay" : _AD_.LowerMainRelay}, "posedge(LowerMainRelay,0.5)")
										UpperMainRelayClosedList, UpperMainRelayClosedSignal = evaluationlibrary.GetConditionTrueTimes({"UpperMainRelay" : _AD_.UpperMainRelay}, "posedge(UpperMainRelay,0.5)")
										PreChargeRelayOpenedList, PreChargeRelayOpenedSignal = evaluationlibrary.GetConditionTrueTimes({"PreChargeRelay" : _AD_.PreChargeRelay}, "negedge(PreChargeRelay,0.5)")
										
										PreChargeClosedVerdict = 0
										PreChargeOpenedVerdict = 0
										UpperMainRelayVerdict = 0
										LowerMainRelayVerdict = 0
										
										if len(PreChargeRelayClosedList) != 0 : 
										    mainlibrary.Decision("Passed", f'PreChargeRelay Closed at {round(PreChargeRelayClosedList[0],3)}')
										    PreChargeClosedVerdict = 1
										else :
										    try :
										        mainlibrary.Decision("Failed", f'PreChargeRelay Still Open at {round( _AD_.PreChargeRelay[0][-1],3)}')
										    except :
										        mainlibrary.Decision("Failed", f'PreChargeRelay Status Failed')
										    
										if len(LowerMainRelayClosedList) != 0 : 
										    mainlibrary.Decision("Passed", f'LowerMainRelay Closed at {round(LowerMainRelayClosedList[0],3)}')
										    LowerMainRelayVerdict = 1
										else :
										    try :
										        mainlibrary.Decision("Failed", f'LowerMainRelay Still Open at {round(_AD_.LowerMainRelay[0][-1],3)}')
										    except :
										        mainlibrary.Decision("Failed", f'LowerMainRelay Status Failed')
										    
										if len(UpperMainRelayClosedList) != 0 : 
										    mainlibrary.Decision("Passed", f'UpperMainRelay Closed at {round(UpperMainRelayClosedList[0],3)}')
										    UpperMainRelayVerdict = 1
										else :
										    try :
										        mainlibrary.Decision("Failed", f'UpperMainRelay Still Open at {round( _AD_.UpperMainRelay[0][-1],3)}')
										    except :
										        mainlibrary.Decision("Failed", f'UpperMainRelay Status Failed')
										    
										if len(PreChargeRelayOpenedList) != 0 : 
										    mainlibrary.Decision("Passed", f'PreChargeRelay Opened at {round(PreChargeRelayOpenedList[0],3)}')
										    PreChargeOpenedVerdict = 1
										else :
										    try :
										        mainlibrary.Decision("Failed", f'PreChargeRelay Still Closed at {round(_AD_.PreChargeRelay[0][-1],3)}')
										    except : 
										        mainlibrary.Decision("Failed", f'PreChargeRelay Closing Status Failed')
										    
										    
										if PreChargeClosedVerdict == 1 and PreChargeOpenedVerdict == 1 and UpperMainRelayVerdict == 1 and LowerMainRelayVerdict == 1:
										    if PreChargeRelayClosedList[0] &lt;= LowerMainRelayClosedList[0] &lt; UpperMainRelayClosedList[0] &lt;= PreChargeRelayOpenedList[0] :
										        mainlibrary.Decision("Passed", f'RelaySwitching Order Correct')
										    else :
										        mainlibrary.Decision("Failed", "RelaySwitching Order Invalid")
									</command>
								</MainLibrary.Exec>
							</subsystems>
						</MainLibrary.Serial>
						<Report.CreateSubreport name="Plots" author="YoussefB" creation-date="2023-02-07T13:41:54" modification-date="2023-02-07T13:42:00">
							<library-description>Report nested blocks to separate Result-XML file.</library-description>
							<LinkDescription name="LinkDescription" modification-date="2023-02-07T13:41:54">
								<value></value>
							</LinkDescription>
							<subsystems>
								<Standard.LibraryLinkBlock name="CustomPlotting" library-link="BMS.CustomPlotting" author="YoussefB" creation-date="2023-02-07T13:40:50" modification-date="2023-02-28T08:54:46">
									<library-description>A Serial that allows Custom Plotting via Matplotloib, and allows two sources of ploting (Mapping / Inner Mapping Dictionary)</library-description>
									<parameters>
										<XILAPI.CaptureResult name="CaptureResult" reference="CaptureResult" author="YoussefB" creation-date="2023-01-25T16:00:04" modification-date="2023-02-07T13:40:52" id="{DB4747D7-1794-4851-B266-EC7DFDD8A968}">
											<value></value>
										</XILAPI.CaptureResult>
										<MainLibrary.List name="MeasurmentVars" reference="MainMeasurmentVars" data-direction="in" author="YoussefB" creation-date="2023-01-25T16:00:05" modification-date="2023-02-07T13:40:54" id="{85995503-ED7B-48ED-82AD-3569289E5488}">
											<value type="expr">[]</value>
										</MainLibrary.List>
										<MainLibrary.Bool name="InternalMapping" data-direction="in" author="YoussefB" creation-date="2023-02-24T14:03:48" modification-date="2023-02-24T14:05:03">
											<value>false</value>
										</MainLibrary.Bool>
										<MainLibrary.Dictionary name="OptionalInternalMapping" author="YoussefB" creation-date="2023-02-24T14:04:32" modification-date="2023-02-24T14:05:03" id="{B886DDDA-C809-40D4-8D47-493B5F8B300A}">
											<value type="expr">{}</value>
										</MainLibrary.Dictionary>
										<MainLibrary.List name="CellSignalNames" author="YoussefB" creation-date="2023-02-24T14:18:42" modification-date="2023-02-24T14:21:11" id="{3D67F4E2-41FB-4F90-AFEE-95A6C73E8C4F}">
											<value type="expr">[]</value>
										</MainLibrary.List>
									</parameters>
								</Standard.LibraryLinkBlock>
							</subsystems>
						</Report.CreateSubreport>
					</subsystems>
				</FrameworkBuilder.ActualOperationSlot>
				<FrameworkBuilder.ActualOperationSlot name="Cleanup" author="YoussefB" creation-date="2023-02-07T10:39:34" modification-date="2023-05-11T15:33:56">
					<library-description>
						To define meta templates.
						This block must be used inside a Frame to define a slot for blocks.
					</library-description>
					<subsystems>
						<Standard.LibraryLinkBlock name="ReleaseCapture" library-link="XIL API Convenience.ReleaseCapture" author="YoussefB" creation-date="2023-02-07T13:42:15" modification-date="2023-02-07T13:42:15">
							<library-description>
								Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
								Release the handle to the internal capture instance.
								
								HELP: automationdesk:///AutomationDeskDocumentation?Show=Help#12502011
							</library-description>
							<parameters>
								<XILAPI.Capture name="Capture" reference="Capture" data-direction="in" result-level="medium" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T13:42:18"></XILAPI.Capture>
							</parameters>
						</Standard.LibraryLinkBlock>
						<Standard.LibraryLinkBlock name="SetCapacitorCapacitance" library-link="BMS.SetCapacitorCapacitance" author="YoussefB" creation-date="2023-02-28T09:20:00" modification-date="2023-02-28T09:20:00">
							<library-description>Set DCLink capacitance</library-description>
							<parameters>
								<MainLibrary.Float name="Capacitance" reference="OriginalCapacitance" data-direction="in" author="YoussefB" creation-date="2023-01-13T14:14:08" modification-date="2023-02-28T09:20:03">
									<value>0.0</value>
								</MainLibrary.Float>
							</parameters>
						</Standard.LibraryLinkBlock>
						<Standard.LibraryLinkBlock name="ReleaseMAPort" library-link="XIL API Convenience.ReleaseMAPort" author="YoussefB" creation-date="2023-02-07T13:42:14" modification-date="2023-02-07T13:42:14">
							<library-description>
								Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. If this method is called at a port instance, the port instance is destroyed and cannot be reused afterwards.
								HELP: automationdesk:///AutomationDeskDocumentation?Show=Help#12501006
							</library-description>
							<parameters>
								<XILAPI.MAPort name="MAPort" reference="MAPort" data-direction="in" author="dSPACE GmbH" creation-date="2015-01-01T00:00:00" modification-date="2023-02-07T13:42:21"></XILAPI.MAPort>
							</parameters>
						</Standard.LibraryLinkBlock>
					</subsystems>
				</FrameworkBuilder.ActualOperationSlot>
			</subsystems>
		</FrameworkBuilder.ActualDataSlot>
	</subsystems>
</FrameworkBuilder.SequenceFrame>